use strict; use warnings;
BEGIN {
  unless(eval q{ use 5.008001; 1}) {
    print "Perl 5.008001 or better required\n";
    exit;
  }
}
# This file was automatically generated by Dist::Zilla::Plugin::Author::Plicease::MakeMaker
use strict;
use warnings;
use 5.008001;
use ExtUtils::MakeMaker 7.1001;
require "./inc/mymm.pl";

my %WriteMakefileArgs = (
  "ABSTRACT"       => "Write Perl bindings to non-Perl libraries with FFI. No XS required.",
  "AUTHOR"         => "Graham Ollis <plicease\@cpan.org>",
  "BUILD_REQUIRES" => {
    "ExtUtils::CBuilder" => 0
  },
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => "7.12",
    "IPC::Cmd"            => 0
  },
  "DISTNAME"         => "FFI-Platypus",
  "LICENSE"          => "perl",
  "MIN_PERL_VERSION" => "5.008001",
  "NAME"             => "FFI::Platypus",
  "PM"               => {
    "lib/FFI/Build.pm"                           => "\$(INST_LIB)/FFI/Build.pm",
    "lib/FFI/Build/File/Base.pm"                 => "\$(INST_LIB)/FFI/Build/File/Base.pm",
    "lib/FFI/Build/File/C.pm"                    => "\$(INST_LIB)/FFI/Build/File/C.pm",
    "lib/FFI/Build/File/CXX.pm"                  => "\$(INST_LIB)/FFI/Build/File/CXX.pm",
    "lib/FFI/Build/File/Library.pm"              => "\$(INST_LIB)/FFI/Build/File/Library.pm",
    "lib/FFI/Build/File/Object.pm"               => "\$(INST_LIB)/FFI/Build/File/Object.pm",
    "lib/FFI/Build/MM.pm"                        => "\$(INST_LIB)/FFI/Build/MM.pm",
    "lib/FFI/Build/Platform.pm"                  => "\$(INST_LIB)/FFI/Build/Platform.pm",
    "lib/FFI/Platypus.pm"                        => "\$(INST_LIB)/FFI/Platypus.pm",
    "lib/FFI/Platypus/API.pm"                    => "\$(INST_LIB)/FFI/Platypus/API.pm",
    "lib/FFI/Platypus/Buffer.pm"                 => "\$(INST_LIB)/FFI/Platypus/Buffer.pm",
    "lib/FFI/Platypus/Closure.pm"                => "\$(INST_LIB)/FFI/Platypus/Closure.pm",
    "lib/FFI/Platypus/DL.pm"                     => "\$(INST_LIB)/FFI/Platypus/DL.pm",
    "lib/FFI/Platypus/Declare.pm"                => "\$(INST_LIB)/FFI/Platypus/Declare.pm",
    "lib/FFI/Platypus/Function.pm"               => "\$(INST_LIB)/FFI/Platypus/Function.pm",
    "lib/FFI/Platypus/Internal.pm"               => "\$(INST_LIB)/FFI/Platypus/Internal.pm",
    "lib/FFI/Platypus/Lang.pm"                   => "\$(INST_LIB)/FFI/Platypus/Lang.pm",
    "lib/FFI/Platypus/Lang/ASM.pm"               => "\$(INST_LIB)/FFI/Platypus/Lang/ASM.pm",
    "lib/FFI/Platypus/Lang/C.pm"                 => "\$(INST_LIB)/FFI/Platypus/Lang/C.pm",
    "lib/FFI/Platypus/Lang/Rust.pm"              => "\$(INST_LIB)/FFI/Platypus/Lang/Rust.pm",
    "lib/FFI/Platypus/Lang/Win32.pm"             => "\$(INST_LIB)/FFI/Platypus/Lang/Win32.pm",
    "lib/FFI/Platypus/Memory.pm"                 => "\$(INST_LIB)/FFI/Platypus/Memory.pm",
    "lib/FFI/Platypus/Record.pm"                 => "\$(INST_LIB)/FFI/Platypus/Record.pm",
    "lib/FFI/Platypus/Record/TieArray.pm"        => "\$(INST_LIB)/FFI/Platypus/Record/TieArray.pm",
    "lib/FFI/Platypus/ShareConfig.pm"            => "\$(INST_LIB)/FFI/Platypus/ShareConfig.pm",
    "lib/FFI/Platypus/Type.pod"                  => "\$(INST_LIB)/FFI/Platypus/Type.pod",
    "lib/FFI/Platypus/Type/PointerSizeBuffer.pm" => "\$(INST_LIB)/FFI/Platypus/Type/PointerSizeBuffer.pm",
    "lib/FFI/Platypus/Type/StringArray.pm"       => "\$(INST_LIB)/FFI/Platypus/Type/StringArray.pm",
    "lib/FFI/Platypus/Type/StringPointer.pm"     => "\$(INST_LIB)/FFI/Platypus/Type/StringPointer.pm",
    "lib/FFI/Probe.pm"                           => "\$(INST_LIB)/FFI/Probe.pm",
    "lib/FFI/Probe/Runner.pm"                    => "\$(INST_LIB)/FFI/Probe/Runner.pm",
    "lib/FFI/Probe/Runner/Builder.pm"            => "\$(INST_LIB)/FFI/Probe/Runner/Builder.pm",
    "lib/FFI/Probe/Runner/Result.pm"             => "\$(INST_LIB)/FFI/Probe/Runner/Result.pm"
  },
  "PREREQ_PM" => {
    "Capture::Tiny"       => 0,
    "ExtUtils::MakeMaker" => "7.12",
    "FFI::CheckLib"       => "0.05",
    "IPC::Cmd"            => 0,
    "JSON::PP"            => 0,
    "List::Util"          => "1.45",
    "constant"            => "1.32"
  },
  "TEST_REQUIRES" => {
    "Capture::Tiny" => 0,
    "Test::More"    => "0.98"
  },
  "VERSION" => "0.76_01",
  "test"    => {
    "TESTS" => "t/*.t"
    }
);

mymm::myWriteMakefile(%WriteMakefileArgs);
{ package MY;
  sub postamble {
    my $postamble = '';

    $postamble .=
      "config :: mymm_config\n" .
      "mymm_config :\n" .
      "\t\$(FULLPERL) inc/mymm-config.pl\n\n";

    $postamble .=
      "pure_all :: mymm_build\n" .
      "mymm_build :\n" .
      "\t\$(FULLPERL) inc/mymm-build.pl\n\n";

    $postamble .=
      "subdirs-test_dynamic subdirs-test_static subdirs-test :: mymm_test\n" .
      "mymm_test :\n" .
      "\t\$(FULLPERL) inc/mymm-test.pl\n\n";

    $postamble .=
      "clean :: mymm_clean\n" .
      "mymm_clean : \n" . 
      "\t\$(FULLPERL) inc/mymm-clean.pl\n\n";

    $postamble;
  }
  sub special_targets {
    my($self, @therest) = @_;
    my $st = $self->SUPER::special_targets(@therest);
    $st .= "\n.PHONY: mymm_config mymm_build mymm_test mymm_clean\n";
    $st;
  }
}